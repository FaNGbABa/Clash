[custom]

[rulesets]
;Enable generating rules with rulesets
enabled=true

;Overwrite the existing rules in rule_base
overwrite_original_rules=false

;Perform a ruleset update on request
update_ruleset_on_request=false

;Ruleset addresses, supports local files/URL
;Format: Group name,[type:]URL[,interval]
;        Group name,[]Rule
;where "type" supports the following value: surge, quanx, clash-domain, clash-ipcidr, clash-classic
;type defaults to surge if omitted

ruleset=DIRECT,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Unbreak.list,86400
ruleset=üéØ ÂÖ®ÁêÉÁõ¥Ëøû,rules/LocalAreaNetwork.list
ruleset=DIRECT,surge:rules/LocalAreaNetwork.list
ruleset=Advertising,quanx:https://raw.githubusercontent.com/ConnersHua/Profiles/master/Quantumult/X/Filter/Advertising.list,86400
ruleset=Domestic Services,clash-domain:https://ruleset.dev/clash_domestic_services_domains,86400
ruleset=Domestic Services,clash-ipcidr:https://ruleset.dev/clash_domestic_services_ips,86400
ruleset=DIRECT,clash-classic:https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml,86400
ruleset=üéØ ÂÖ®ÁêÉÁõ¥Ëøû,[]GEOIP,CN
ruleset=üêü ÊºèÁΩë‰πãÈ±º,[]FINAL

# ruleset=!!import:snippets/rulesets.txt

[proxy_groups]
;Generate Clash Proxy Group with the following patterns. Node filtering rule supports regular expression.
;Format: Group_Name`select`Rule_1`Rule_2`...
;        Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval[,timeout][,tolerance]
;Rule with "[]" prefix will be added directly.

custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
custom_proxy_group=UrlTest`url-test`.*`http://www.gstatic.com/generate_204`300,5,100
custom_proxy_group=FallBack`fallback`.*`http://www.gstatic.com/generate_204`300,5
custom_proxy_group=LoadBalance`load-balance`.*`http://www.gstatic.com/generate_204`300,,100
custom_proxy_group=SSID`ssid`default_group`celluar=group0,ssid1=group1,ssid2=group2

custom_proxy_group=g1`select`!!GROUPID=0
custom_proxy_group=g2`select`!!GROUPID=1
custom_proxy_group=v2ray`select`!!GROUP=V2RayProvider

custom_proxy_group=g1hk`select`!!GROUPID=0!!(HGC|HKBN|PCCW|HKT|hk|Ê∏Ø)
custom_proxy_group=sstw`select`!!GROUP=V2RayProvider!!(Ê∑±Âè∞|ÂΩ∞Âåñ|Êñ∞Âåó|Âè∞|tw)
custom_proxy_group=provider`select`!!PROVIDER=prov1,prov2,prov3`fallback_nodes

;Also supports using script for filtering nodes. A "filter" function with one argument which is an array of all available nodes should be defined in the script.
;custom_proxy_group=script`select`script:/path/to/script.js

;for forcerule.yml
;custom_proxy_group=!!import:snippets/groups_forcerule.txt

;for Surge rulesets
# custom_proxy_group=!!import:snippets/groups.txt
